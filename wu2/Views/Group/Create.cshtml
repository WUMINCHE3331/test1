@model wu2.Models.Groups
@{
    ViewBag.Title = "Create Group";
}





@using (Html.BeginForm("Create", "Group", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
{
    <h3 class="text-center">創建群組</h3>
    <div class="form-group row">
        @Html.LabelFor(model => model.GroupName, "群組名稱", htmlAttributes: new { @class = "control-label col-md-4 required-field" })
        <div class="col-12 col-md-8">
            @Html.EditorFor(model => model.GroupName, new { htmlAttributes = new { @class = "form-control", required = "required", placeholder = "請輸入群組名稱", style = "width: 100%;" } })
            @Html.ValidationMessageFor(model => model.GroupName, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group row">
        @Html.LabelFor(model => model.Budget, "預算", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Budget, new { htmlAttributes = new { @class = "form-control", @type = "number", placeholder = "請輸入預算(選填)", @id = "budgetInput" } })
            @Html.ValidationMessageFor(model => model.Budget, "", new { @class = "text-danger" })
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var budgetInput = document.getElementById("budgetInput");

            budgetInput.addEventListener("input", function () {
                var value = parseFloat(budgetInput.value);

                // 設定範圍限制
                var minValue = 0;
                var maxValue = 9999999999999999.99; // 例如限制到 16 位數字

                // 驗證輸入值是否在範圍內
                if (isNaN(value) || value < minValue || value > maxValue || value== ""){
                    budgetInput.setCustomValidity("請輸入有效的範圍，範圍是 " + minValue + " 到 " + maxValue);
                } else {
                    budgetInput.setCustomValidity(""); // 清除錯誤訊息
                }
            });
        });
    </script>
    <div class="form-group row">
        @Html.LabelFor(model => model.Currency, "貨幣", htmlAttributes: new { @class = "control-label col-md-4 required-field" })
        <div class="col-md-8">
            <select id="currencySelect" name="Currency" class="form-control" required="required"></select>
            @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.Label("群組照片", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            <div class="custom-file">
                <input type="file" class="custom-file-input" id="GroupsPhoto" name="GroupsPhoto" accept="image/*" onchange="previewImage(event)">
                <label class="custom-file-label" for="GroupsPhoto">選擇檔案</label>
            </div>
            @Html.ValidationMessage("GroupPhoto", "", new { @class = "text-danger" })
          
            <div class="mt-3">
                <img id="imagePreview" src="" alt="Image Preview" style="display: none; max-width: 100%; border-radius: 6px; box-shadow: var(--box-shadow);">
            </div>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-8 offset-md-4 d-flex justify-content-between">
            <button type="submit" class="btn btn-primary ">建立</button>
            @Html.ActionLink("返回群組", "MyGroups", null, new { @class = "btn btn-primary" })
        </div>
    </div>
}
<script>
    function previewImage(event) {
        var input = event.target;
        var reader = new FileReader();

        reader.onload = function () {
            var dataURL = reader.result;
            var previewImage = document.getElementById('imagePreview');
            previewImage.src = dataURL;
            previewImage.style.display = 'block'; 
        };

        if (input.files && input.files[0]) {
            reader.readAsDataURL(input.files[0]);
        }
    }

</script>
<style>
    .custom-file {
        width: 100%;
    }

    .custom-file-label {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .custom-file-input ~ .custom-file-label::after {
        content: "瀏覽"; 
        background-color: var(--blue);
        border-color: var(--blue); 
        padding: 0.375rem 1rem; 
        border-radius: 0 6px 6px 0; 
    }

    .custom-file-input {
        padding-left: 0.5rem;
    }

    #imagePreview {
        margin-top: 1rem;
        border-radius: 8px;
        max-width: 100%;
        height: auto;
        box-shadow: var(--box-shadow);
        border: 1px solid var(--grey);
    }

    .form-horizontal {
        background-color: var(--light);
        padding: 2rem;
        border-radius: 8px;
        box-shadow: var(--box-shadow);
        max-width: 500px;
        margin: 2rem auto;
    }

    .form-group label {
        font-family: var(--lato);
        font-weight: bold;
        color: var(--dark);
    }


    .form-control {
        width: 100% !important; 
    }

    .form-control {
        font-family: var(--poppins);
        padding: 0.75rem;
        border-radius: 6px;
        box-shadow: none;
        transition: border-color 0.3s ease;
    }

        .form-control:focus {
            border-color: var(--blue);
            box-shadow: 0 0 0 0.2rem rgba(60, 145, 230, 0.25);
        }

    .btn-primary {
        background-color: var(--blue);
        border-color: var(--blue);
        padding: 0.75rem 1.5rem;
        font-family: var(--poppins);
        font-weight: bold;
        border-radius: 6px;
        transition: background-color 0.3s ease;
    }

        .btn-primary:hover {
            background-color: var(--dark);
            border-color: var(--dark);
        }

    .btn-secondary {
        background-color: var(--grey);
        border-color: var(--dark-grey);
        padding: 0.75rem 1.5rem;
        font-family: var(--poppins);
        font-weight: bold;
        border-radius: 6px;
        transition: background-color 0.3s ease;
    }

        .btn-secondary:hover {
            background-color: var(--dark-grey);
            border-color: var(--dark);
        }

    .custom-file-input ~ .custom-file-label::after {
        content: "瀏覽";
        background-color: var(--blue);
        border-color: var(--blue);
        color: white;
    }

    .custom-file-input:focus ~ .custom-file-label {
        border-color: var(--blue);
        box-shadow: 0 0 0 0.2rem rgba(60, 145, 230, 0.25);
    }

    .text-danger {
        color: var(--red);
    }

    .required-field::after {
        content: "*";
        color: var(--red);
        margin-left: 5px;
    }
</style>

<script>
    $(document).ready(function () {
        const selectElement = $('#currencySelect');

        // 優先插入 TWD 為第一個選項
        let twdFlagUrl = `https://flagcdn.com/48x36/tw.png`;
        selectElement.append(`<option value="TWD" data-flag="${twdFlagUrl}" selected>TWD</option>`);

        // 插入其他貨幣選項
        for (let currencyCode in country_list) {
            if (currencyCode !== 'TWD') { // 排除已插入的 TWD
                let flagUrl = `https://flagcdn.com/48x36/${country_list[currencyCode].toLowerCase()}.png`;
                let option = `<option value="${currencyCode}" data-flag="${flagUrl}">${currencyCode}</option>`;
                selectElement.append(option);
            }
        }

        // 初始化 select2，帶有國旗
        selectElement.select2({
            width: '100%', // 讓 Select2 隨容器寬度變化
            templateResult: formatState,
            templateSelection: formatState,
            escapeMarkup: function (m) { return m; },
            minimumResultsForSearch: Infinity // 禁用搜索框
        });

        // 自訂 select2 選項顯示的函數
        function formatState(state) {
            if (!state.id) {
                return state.text;
            }
            let flagUrl = state.element.dataset.flag;
            let $state = $(
                `<span><img src="${flagUrl}" alt="${state.id} flag" class="img-flag" style="width: 20px; margin-right: 10px;" /> ${state.text}</span>`
            );
            return $state;
        }
    });

</script>